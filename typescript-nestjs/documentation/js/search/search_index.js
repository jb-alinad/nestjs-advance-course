var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Address.html",[0,0.227,1,1.493]],["body/classes/Address.html",[0,0.354,1,2.429,2,1.978,3,0.366,4,0.366,5,0.459,6,1.294,7,0.313,8,1.16,9,2.673,10,2.603,11,2.603,12,0.601,13,0.045,14,2.052,15,1.668,16,3.39,17,3.46,18,2.587,19,0.808,20,2.165,21,2.255,22,2.165,23,0.843,24,1.493,25,2.195,26,2.195,27,2.195,28,3.057,29,2.195,30,2.195,31,1.294,32,1.493,33,1.135,34,2.195,35,1.294,36,0.638,37,2.863,38,2.195,39,1.473,40,2.195,41,2.195,42,1.002,43,0.484,44,1.294,45,1.294,46,1.493,47,1.493,48,1.135,49,1.002,50,1.294,51,0.026,52,0.026]],["title/controllers/AppController.html",[53,1.493,54,1.493]],["body/controllers/AppController.html",[0,0.24,3,0.508,4,0.508,5,0.365,7,0.434,13,0.046,14,1.854,15,2.099,19,1.017,23,0.671,36,0.508,51,0.032,52,0.032,53,1.574,54,2.099,55,1.39,56,2.442,57,2.442,58,1.795,59,1.46,60,4.805,61,4.805,62,4.005,63,3.004,64,1.297,65,4.805,66,4.005,67,3.004,68,0.863,69,3.004,70,2.393,71,3.256]],["title/modules/AppModule.html",[72,1.493,73,1.702]],["body/modules/AppModule.html",[0,0.257,3,0.544,4,0.544,5,0.391,13,0.046,23,1.041,36,0.544,51,0.034,52,0.034,54,2.442,55,1.939,68,0.924,72,2.196,73,3.136,74,1.489,75,2.196,76,2.615,77,2.615,78,2.75,79,2.889,80,2.218,81,2.218,82,3.217,83,4.19,84,3.217,85,3.217]],["title/injectables/AuthMiddleware.html",[86,0.923,87,1.702]],["body/injectables/AuthMiddleware.html",[0,0.206,3,0.437,4,0.437,5,0.315,7,0.374,12,0.374,13,0.046,19,0.918,23,0.931,36,0.437,39,2.09,43,0.578,48,2.185,51,0.029,52,0.029,59,1.319,64,0.838,68,0.743,86,1.172,87,2.162,88,1.356,89,2.104,90,3.39,91,2.94,92,4.17,93,2.588,94,2.94,95,3.114,96,4.17,97,3.67,98,4.515,99,2.588,100,0.944,101,0.838,102,2.104,103,2.588,104,2.104,105,1.785,106,2.94,107,2.495,108,2.588,109,2.104,110,1.356,111,2.104,112,4.17,113,2.588,114,2.588,115,1.547,116,2.104,117,2.588,118,2.588,119,2.588,120,2.588]],["title/interfaces/Cat.html",[121,1.493,122,1.493]],["body/interfaces/Cat.html",[3,0.582,4,0.582,5,0.419,7,0.498,8,1.596,12,0.696,13,0.044,14,2.473,21,2.876,36,0.582,43,1.131,44,3.026,45,3.026,51,0.035,52,0.035,121,1.805,122,2.294,123,2.375,124,2.799]],["title/controllers/CatController.html",[53,1.493,125,1.702]],["body/controllers/CatController.html",[0,0.158,3,0.334,4,0.334,5,0.24,7,0.286,9,1.036,12,0.286,13,0.045,15,1.559,19,0.755,23,0.889,33,1.036,36,0.334,37,1.777,42,1.841,43,0.441,49,0.915,51,0.024,52,0.024,53,1.036,55,0.915,57,1.607,59,1.084,64,0.963,68,0.568,70,1.777,71,2.418,90,3.644,95,2.051,100,0.721,101,0.64,105,1.363,115,2.137,122,2.085,125,1.777,126,1.607,127,1.607,128,2.974,129,3.978,130,1.976,131,1.976,132,2.051,133,2.974,134,2.974,135,3.978,136,2.974,137,3.978,138,2.974,139,3.234,140,1.976,141,2.974,142,1.976,143,2.974,144,1.976,145,1.976,146,1.607,147,1.976,148,1.607,149,1.976,150,2.418,151,1.976,152,1.976,153,2.974,154,2.974,155,3.576,156,1.976,157,3.576,158,3.576,159,3.576,160,1.976,161,1.976,162,1.377,163,1.607,164,1.976,165,1.976,166,1.976,167,1.976,168,1.976,169,2.974,170,2.508,171,2.974,172,2.974,173,1.976,174,1.976,175,1.976]],["title/modules/CatsModule.html",[72,1.493,78,1.493]],["body/modules/CatsModule.html",[0,0.216,3,0.458,4,0.458,5,0.33,12,0.392,13,0.045,19,0.688,23,1.029,36,0.458,43,0.605,48,1.957,51,0.03,52,0.03,55,1.729,59,0.988,64,0.878,68,0.778,72,1.957,74,1.254,75,1.957,78,2.617,79,2.575,80,1.869,81,1.869,87,1.619,100,0.988,101,0.878,110,1.42,125,2.553,162,2.311,163,2.202,176,2.202,177,2.202,178,2.709,179,3.734,180,2.709,181,3.734,182,4.605,183,2.709,184,2.709,185,1.619,186,3.734,187,2.709,188,2.709,189,2.709,190,2.709,191,2.709,192,2.709,193,2.709,194,2.709,195,2.709]],["title/injectables/CatsService.html",[86,0.923,162,1.319]],["body/injectables/CatsService.html",[0,0.224,3,0.474,4,0.474,5,0.341,7,0.406,8,1.394,9,2.28,12,0.553,13,0.046,19,1.105,23,0.854,36,0.474,43,0.627,51,0.031,52,0.031,59,1.394,64,1.239,68,0.806,70,1.676,86,1.239,88,1.47,100,1.023,101,0.909,122,2.793,127,3.537,132,2.637,162,1.77,185,1.676,196,2.28,197,4.351,198,4.673,199,3.824,200,2.805,201,2.805,202,2.28,203,2.28,204,2.805,205,2.805,206,2.805,207,2.805]],["title/classes/CreateCatDto.html",[0,0.227,42,1.319]],["body/classes/CreateCatDto.html",[0,0.338,1,2.553,2,1.853,3,0.328,4,0.328,5,0.43,6,1.159,7,0.28,8,1.069,9,2.68,10,1.338,11,1.338,12,0.668,13,0.045,14,2.06,15,2.065,16,3.424,17,3.479,18,2.384,19,1.001,21,2.113,23,0.79,24,1.338,25,2.023,26,2.023,27,2.023,28,2.919,29,2.023,30,2.023,31,1.159,32,1.338,33,1.017,34,2.023,35,1.159,36,0.598,37,2.844,38,2.023,39,1.358,40,2.023,41,2.023,42,1.358,43,0.79,44,2.113,45,2.113,46,1.338,47,1.338,48,1.853,49,0.898,50,1.159,51,0.024,52,0.024,101,0.95,208,1.94,209,1.94,210,1.94,211,1.94,212,1.94,213,1.94]],["title/injectables/ErrorsInterceptor.html",[86,0.923,214,1.965]],["body/injectables/ErrorsInterceptor.html",[0,0.23,3,0.487,4,0.487,5,0.351,7,0.417,12,0.417,13,0.045,19,0.732,23,0.985,36,0.487,39,2.187,43,0.644,51,0.031,52,0.031,59,1.42,64,0.933,68,0.828,70,1.722,86,1.261,88,1.51,100,1.051,101,0.933,104,3.841,105,1.987,107,1.987,110,1.51,116,2.342,214,2.686,215,2.342,216,3.894,217,3.894,218,4.725,219,2.881,220,2.881,221,4.411,222,3.894,223,2.881,224,2.342,225,2.881,226,2.881,227,2.881,228,2.881,229,2.881,230,2.881,231,2.881,232,2.881]],["title/classes/GetCatByIdParam.html",[0,0.227,49,1.319]],["body/classes/GetCatByIdParam.html",[0,0.361,1,2.373,2,2.038,3,0.386,4,0.386,5,0.473,6,1.363,7,0.33,8,1.206,9,2.614,10,1.573,11,1.573,12,0.562,13,0.045,14,2.096,15,1.196,16,3.359,17,3.44,19,0.579,21,1.976,23,0.869,24,1.573,25,2.28,26,2.28,27,2.28,28,3.122,29,2.28,30,2.28,31,1.363,32,1.573,33,1.196,34,2.28,35,1.363,36,0.657,37,2.91,38,2.28,39,1.531,40,2.28,41,2.28,42,1.056,43,0.51,44,1.363,45,1.363,46,1.573,47,1.573,48,1.196,49,1.531,50,2.324,51,0.027,52,0.027,233,2.281,234,2.281]],["title/classes/HttpExceptionFilter.html",[0,0.227,235,1.965]],["body/classes/HttpExceptionFilter.html",[0,0.23,2,1.51,3,0.487,4,0.487,5,0.351,7,0.417,12,0.417,13,0.045,19,0.732,23,0.644,36,0.487,43,0.644,51,0.031,52,0.031,59,1.42,64,0.933,68,0.828,95,1.987,97,2.342,100,1.051,101,0.933,107,3.259,110,2.041,111,3.841,115,1.722,185,1.722,235,2.686,236,2.342,237,4.411,238,4.411,239,3.894,240,4.411,241,4.725,242,2.881,243,2.881,244,2.881,245,2.881,246,2.881,247,2.881,248,2.881,249,3.894,250,2.881,251,2.881,252,2.881,253,2.881,254,2.881,255,2.881]],["title/injectables/LoggerMiddleware.html",[86,0.923,256,1.965]],["body/injectables/LoggerMiddleware.html",[0,0.255,3,0.541,4,0.541,5,0.389,7,0.463,12,0.463,13,0.046,19,0.813,23,0.715,36,0.541,39,2.28,43,0.715,51,0.034,52,0.034,59,1.523,64,1.037,68,0.919,86,1.353,88,1.677,91,3.395,94,3.395,100,1.167,101,1.037,102,2.602,106,3.395,110,1.677,185,2.778,256,2.88,257,2.602,258,4.648,259,3.201,260,2.602,261,3.201]],["title/interfaces/SwaggerConfig.html",[121,1.493,262,1.702]],["body/interfaces/SwaggerConfig.html",[3,0.535,4,0.535,5,0.386,7,0.458,8,1.513,12,0.709,13,0.043,14,2.587,36,0.535,51,0.033,52,0.033,58,1.894,121,1.661,123,2.185,170,2.67,262,2.479,263,2.576,264,3.169,265,2.576,266,1.661,267,1.894,268,2.576,269,3.989,270,3.989,271,3.384]],["title/coverage.html",[272,2.665]],["body/coverage.html",[0,0.366,1,1.408,5,0.327,6,2.542,12,0.388,13,0.045,42,1.244,49,1.244,51,0.03,52,0.03,53,1.946,54,1.408,56,2.184,86,1.486,87,1.605,89,2.184,115,1.605,121,1.946,122,1.408,124,2.184,125,1.605,126,2.184,162,1.244,196,2.184,214,1.853,215,2.184,235,1.853,236,2.184,256,1.853,257,2.184,260,2.184,262,1.605,263,2.184,272,1.853,273,2.686,274,2.686,275,2.686,276,5.4,277,4.589,278,4.589,279,2.686,280,3.712,281,2.184,282,2.686,283,2.184,284,3.712,285,3.712,286,2.686,287,2.686,288,2.184,289,2.184,290,2.686,291,2.686]],["title/dependencies.html",[75,1.792,292,1.943]],["body/dependencies.html",[0,0.285,13,0.046,31,1.522,33,1.335,35,1.522,51,0.029,52,0.029,68,0.731,75,1.335,109,3.644,224,2.07,266,1.335,267,1.522,293,4.897,294,2.547,295,2.547,296,2.547,297,3.577,298,2.907,299,3.577,300,2.547,301,2.547,302,2.547,303,2.07,304,2.547,305,2.547,306,2.547,307,2.547,308,2.547,309,2.547,310,2.547,311,2.547,312,2.547,313,2.547,314,2.547,315,2.547,316,2.547,317,2.547,318,2.547,319,2.547,320,2.07,321,2.547,322,2.547,323,2.547,324,2.547,325,2.547,326,2.547,327,2.547,328,2.547,329,2.547,330,2.547,331,2.547,332,2.547,333,2.547,334,2.547,335,2.547,336,2.547,337,2.547,338,2.547,339,2.547,340,2.07,341,2.547,342,2.547,343,2.547,344,2.547,345,2.547]],["title/miscellaneous/functions.html",[346,1.429,347,2.78]],["body/miscellaneous/functions.html",[7,0.529,12,0.529,13,0.042,43,0.818,51,0.037,52,0.037,64,1.186,100,1.335,101,1.186,170,1.919,266,1.919,288,2.977,289,3.698,346,2.188,347,2.977,348,3.662,349,3.662,350,4.55,351,3.662,352,4.55,353,4.55,354,3.698,355,3.662,356,2.525,357,2.977,358,3.662]],["title/index.html",[7,0.346,359,2.391,360,1.943]],["body/index.html",[5,0.178,13,0.044,50,1.76,51,0.019,52,0.019,54,0.765,55,0.675,58,1.76,72,1.769,74,0.675,132,1.006,139,1.186,146,1.186,148,1.186,150,1.908,266,0.765,267,0.872,272,1.006,298,1.186,303,1.186,320,1.186,340,1.186,354,1.908,356,1.619,357,2.744,360,1.186,361,2.348,362,1.459,363,1.459,364,1.459,365,1.459,366,1.459,367,2.348,368,1.459,369,1.459,370,1.459,371,1.459,372,1.459,373,1.459,374,1.459,375,1.459,376,1.459,377,1.459,378,1.459,379,1.459,380,1.459,381,1.459,382,1.459,383,1.459,384,1.459,385,1.459,386,1.459,387,1.459,388,1.459,389,1.459,390,2.348,391,1.459,392,1.459,393,1.459,394,1.459,395,1.459,396,2.348,397,1.459,398,1.459,399,1.459,400,1.459,401,1.459,402,1.459,403,1.459,404,1.459,405,1.459,406,1.459,407,1.459,408,1.459,409,1.459,410,4.156,411,1.459,412,1.459,413,1.459,414,2.348,415,2.348,416,2.946,417,2.348,418,1.459,419,1.459,420,2.348,421,1.459,422,1.459,423,1.459,424,1.459,425,2.348,426,1.459,427,1.459,428,4.768,429,1.459,430,1.459,431,3.804,432,4.579,433,4.579,434,4.579,435,4.579,436,2.348,437,1.459,438,4.156,439,4.156,440,4.156,441,1.459,442,1.459,443,2.348,444,2.946,445,1.459,446,1.459,447,1.459,448,1.459,449,1.459,450,1.459,451,1.459,452,1.459,453,1.459,454,4.156,455,1.459,456,1.459,457,2.348,458,1.459,459,1.459,460,2.348,461,1.459,462,1.459,463,1.459,464,1.459,465,1.459,466,1.459,467,1.459,468,1.459,469,1.459,470,1.459,471,1.459,472,2.946,473,1.459,474,2.348,475,1.459,476,1.459,477,1.459]],["title/modules.html",[74,1.789]],["body/modules.html",[13,0.039,51,0.039,52,0.039,73,2.457,74,1.903,78,2.155,478,4.882,479,4.882,480,4.882,481,4.882]],["title/overview.html",[482,3.142]],["body/overview.html",[2,1.865,13,0.041,51,0.036,52,0.036,55,1.647,73,3.063,74,1.647,75,2.342,76,2.893,77,2.893,78,2.767,79,3.082,80,2.455,81,2.455,88,1.865,123,2.455,162,2.262,176,2.893,177,2.893,482,2.893,483,4.886,484,4.47]],["title/properties.html",[8,1.247,292,1.943]],["body/properties.html",[8,1.499,13,0.045,51,0.039,52,0.039,170,2.155,271,2.836,485,4.112,486,4.112,487,4.112,488,4.112]],["title/miscellaneous/variables.html",[346,1.429,489,2.78]],["body/miscellaneous/variables.html",[7,0.52,12,0.52,13,0.044,51,0.036,52,0.036,58,2.151,170,1.886,202,2.926,203,2.926,262,2.151,265,2.926,266,1.886,267,2.151,268,2.926,269,2.926,270,2.926,271,2.482,281,2.926,283,3.659,346,2.151,356,2.482,431,2.926,489,2.926,490,3.599,491,3.599,492,4.911,493,3.599,494,3.599,495,3.599]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Cat.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["0.12.0",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["0.2.22",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["04/06/2020",{"_index":433,"title":{},"body":{"index.html":{}}}],["1.0",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.7.0",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["1:39",{"_index":434,"title":{},"body":{"index.html":{}}}],["2",{"_index":483,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":485,"title":{},"body":{"properties.html":{}}}],["2.1.0",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["2.25.3",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["2ms",{"_index":448,"title":{},"body":{"index.html":{}}}],["3.2.0",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["3000installation",{"_index":453,"title":{},"body":{"index.html":{}}}],["3ms",{"_index":443,"title":{},"body":{"index.html":{}}}],["4",{"_index":484,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["48",{"_index":432,"title":{},"body":{"index.html":{}}}],["4ms",{"_index":444,"title":{},"body":{"index.html":{}}}],["5.2.0",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["5.3.3",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["5ms",{"_index":446,"title":{},"body":{"index.html":{}}}],["6.3.1",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["6.4.6",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["6ms",{"_index":441,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["726ms",{"_index":437,"title":{},"body":{"index.html":{}}}],["7ms",{"_index":450,"title":{},"body":{"index.html":{}}}],["_",{"_index":96,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["address",{"_index":1,"title":{"classes/Address.html":{}},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"coverage.html":{}}}],["age",{"_index":44,"title":{},"body":{"classes/Address.html":{},"interfaces/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["api",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"interfaces/SwaggerConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api/v1",{"_index":193,"title":{},"body":{"modules/CatsModule.html":{}}}],["apibadrequestresponse",{"_index":155,"title":{},"body":{"controllers/CatController.html":{}}}],["apibearerauth",{"_index":156,"title":{},"body":{"controllers/CatController.html":{}}}],["apiinternalservererrorresponse",{"_index":157,"title":{},"body":{"controllers/CatController.html":{}}}],["apiokresponse",{"_index":158,"title":{},"body":{"controllers/CatController.html":{}}}],["apioperation",{"_index":159,"title":{},"body":{"controllers/CatController.html":{}}}],["apiproperty",{"_index":32,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["apiproperty({description",{"_index":16,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["apiproperty({description:\"address",{"_index":46,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["apitags",{"_index":160,"title":{},"body":{"controllers/CatController.html":{}}}],["apitags('cat",{"_index":169,"title":{},"body":{"controllers/CatController.html":{}}}],["apitags('cat')@get('')@apioperation({description",{"_index":142,"title":{},"body":{"controllers/CatController.html":{}}}],["apitags('cat')@post('')@apioperation({description",{"_index":131,"title":{},"body":{"controllers/CatController.html":{}}}],["app",{"_index":356,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app/controllers/app.controller",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["app/domain/cat.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":54,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{},"index.html":{}}}],["application",{"_index":354,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["appmodule",{"_index":73,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":241,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arrayminsize",{"_index":24,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["arrayminsize(1",{"_index":47,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["async",{"_index":90,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{}}}],["authmiddleware",{"_index":87,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["author",{"_index":488,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":112,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["available",{"_index":381,"title":{},"body":{"index.html":{}}}],["backend",{"_index":367,"title":{},"body":{"index.html":{}}}],["bad",{"_index":135,"title":{},"body":{"controllers/CatController.html":{}}}],["based",{"_index":368,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["bcryptjs",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":145,"title":{},"body":{"controllers/CatController.html":{}}}],["breed",{"_index":45,"title":{},"body":{"classes/Address.html":{},"interfaces/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["browse",{"_index":481,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":478,"title":{},"body":{"modules.html":{}}}],["build",{"_index":416,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":445,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":218,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["cat",{"_index":122,"title":{"interfaces/Cat.html":{}},"body":{"interfaces/Cat.html":{},"controllers/CatController.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat'})@usepipes(validationpipe)@httpcode(httpstatus.ok)@apiokresponse({description",{"_index":133,"title":{},"body":{"controllers/CatController.html":{}}}],["cat.controller",{"_index":189,"title":{},"body":{"modules/CatsModule.html":{}}}],["cat.dto",{"_index":161,"title":{},"body":{"controllers/CatController.html":{}}}],["cat.interface",{"_index":205,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.service",{"_index":163,"title":{},"body":{"controllers/CatController.html":{},"modules/CatsModule.html":{}}}],["catch",{"_index":238,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":239,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":244,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":225,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["catcherror(err",{"_index":229,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["catcontroller",{"_index":125,"title":{"controllers/CatController.html":{}},"body":{"controllers/CatController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["cats",{"_index":127,"title":{},"body":{"controllers/CatController.html":{},"injectables/CatsService.html":{}}}],["catservice",{"_index":168,"title":{},"body":{"controllers/CatController.html":{}}}],["catsmodule",{"_index":78,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":162,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["change",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city",{"_index":10,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["class",{"_index":0,"title":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{}},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":176,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":177,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["common/auth.middleware",{"_index":188,"title":{},"body":{"modules/CatsModule.html":{}}}],["compose",{"_index":414,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":393,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":265,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["configure",{"_index":180,"title":{},"body":{"modules/CatsModule.html":{}}}],["configure(consumer",{"_index":181,"title":{},"body":{"modules/CatsModule.html":{}}}],["console.log(`request",{"_index":261,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["const",{"_index":111,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/HttpExceptionFilter.html":{}}}],["constructor",{"_index":92,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["constructor(private",{"_index":167,"title":{},"body":{"controllers/CatController.html":{}}}],["consumer",{"_index":184,"title":{},"body":{"modules/CatsModule.html":{}}}],["consumer.apply(authmiddleware",{"_index":190,"title":{},"body":{"modules/CatsModule.html":{}}}],["contacts",{"_index":361,"title":{},"body":{"index.html":{}}}],["contactscontroller",{"_index":442,"title":{},"body":{"index.html":{}}}],["context",{"_index":220,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["controller",{"_index":53,"title":{"controllers/AppController.html":{},"controllers/CatController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatController.html":{},"coverage.html":{}}}],["controller('/api",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["controller('cats",{"_index":164,"title":{},"body":{"controllers/CatController.html":{}}}],["controllers",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"index.html":{},"overview.html":{}}}],["coverage",{"_index":272,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cp",{"_index":411,"title":{},"body":{"index.html":{}}}],["create",{"_index":132,"title":{},"body":{"controllers/CatController.html":{},"injectables/CatsService.html":{},"index.html":{}}}],["create(cat",{"_index":199,"title":{},"body":{"injectables/CatsService.html":{}}}],["createcat",{"_index":128,"title":{},"body":{"controllers/CatController.html":{}}}],["createcat(@body",{"_index":173,"title":{},"body":{"controllers/CatController.html":{}}}],["createcat(cat",{"_index":130,"title":{},"body":{"controllers/CatController.html":{}}}],["createcatdto",{"_index":42,"title":{"classes/CreateCatDto.html":{}},"body":{"classes/Address.html":{},"controllers/CatController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"coverage.html":{}}}],["created",{"_index":138,"title":{},"body":{"controllers/CatController.html":{}}}],["createdocument",{"_index":289,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdocument(app",{"_index":349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createparamdecorator",{"_index":103,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["creates",{"_index":351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctx",{"_index":245,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":248,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":247,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["dashboard",{"_index":384,"title":{},"body":{"index.html":{}}}],["data",{"_index":137,"title":{},"body":{"controllers/CatController.html":{}}}],["database",{"_index":394,"title":{},"body":{"index.html":{}}}],["date().toisostring",{"_index":253,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["db",{"_index":378,"title":{},"body":{"index.html":{}}}],["db_charset=utf8mb4",{"_index":408,"title":{},"body":{"index.html":{}}}],["db_collate=utf8mb4_unicode_ci",{"_index":409,"title":{},"body":{"index.html":{}}}],["db_dialect=mysql",{"_index":407,"title":{},"body":{"index.html":{}}}],["db_type=mysql",{"_index":400,"title":{},"body":{"index.html":{}}}],["debug",{"_index":469,"title":{},"body":{"index.html":{}}}],["debugger",{"_index":456,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"controllers/CatController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["default",{"_index":202,"title":{},"body":{"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["delete",{"_index":146,"title":{},"body":{"controllers/CatController.html":{},"index.html":{}}}],["dependencies",{"_index":75,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":170,"title":{},"body":{"controllers/CatController.html":{},"interfaces/SwaggerConfig.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":468,"title":{},"body":{"index.html":{}}}],["docker",{"_index":420,"title":{},"body":{"index.html":{}}}],["docker/node/node",{"_index":419,"title":{},"body":{"index.html":{}}}],["document",{"_index":353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["driven",{"_index":374,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":391,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":475,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":427,"title":{},"body":{"index.html":{}}}],["entity",{"_index":395,"title":{},"body":{"index.html":{}}}],["entrypoint.sh",{"_index":422,"title":{},"body":{"index.html":{}}}],["entrypoint.sh:/usr/local/bin/docker",{"_index":421,"title":{},"body":{"index.html":{}}}],["env",{"_index":396,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":412,"title":{},"body":{"index.html":{}}}],["env=development",{"_index":399,"title":{},"body":{"index.html":{}}}],["env_file",{"_index":423,"title":{},"body":{"index.html":{}}}],["envdocker",{"_index":413,"title":{},"body":{"index.html":{}}}],["envserver",{"_index":424,"title":{},"body":{"index.html":{}}}],["errorsinterceptor",{"_index":214,"title":{"injectables/ErrorsInterceptor.html":{}},"body":{"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["event",{"_index":373,"title":{},"body":{"index.html":{}}}],["exception",{"_index":243,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":250,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":237,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude('/api/v1/cat/something",{"_index":191,"title":{},"body":{"modules/CatsModule.html":{}}}],["exec",{"_index":463,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":104,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ErrorsInterceptor.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Cat.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{}}}],["express",{"_index":109,"title":{},"body":{"injectables/AuthMiddleware.html":{},"dependencies.html":{}}}],["ext",{"_index":459,"title":{},"body":{"index.html":{}}}],["features",{"_index":386,"title":{},"body":{"index.html":{}}}],["fetched",{"_index":143,"title":{},"body":{"controllers/CatController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Cat.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"coverage.html":{},"index.html":{}}}],["findall",{"_index":198,"title":{},"body":{"injectables/CatsService.html":{}}}],["forroutes({path",{"_index":192,"title":{},"body":{"modules/CatsModule.html":{}}}],["found",{"_index":268,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":369,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":380,"title":{},"body":{"index.html":{}}}],["function",{"_index":260,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":347,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/health",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/testauth0",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["getcatbyidparam",{"_index":49,"title":{"classes/GetCatByIdParam.html":{}},"body":{"classes/Address.html":{},"controllers/CatController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"coverage.html":{}}}],["gethealthcheck",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":359,"title":{"index.html":{}},"body":{}}],["guards",{"_index":392,"title":{},"body":{"index.html":{}}}],["handle",{"_index":227,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["header",{"_index":118,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["here",{"_index":382,"title":{},"body":{"index.html":{}}}],["host",{"_index":240,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":246,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["http://localhost:3000",{"_index":426,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":147,"title":{},"body":{"controllers/CatController.html":{}}}],["httpcode(httpstatus.ok",{"_index":172,"title":{},"body":{"controllers/CatController.html":{}}}],["httpexception",{"_index":107,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexception('new",{"_index":231,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["httpexceptionfilter",{"_index":235,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://github.com/tkssharma/ng",{"_index":383,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":371,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":105,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{},"injectables/ErrorsInterceptor.html":{}}}],["httpstatus.bad_gateway",{"_index":232,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["httpstatus.bad_request",{"_index":119,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["id",{"_index":50,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"index.html":{}}}],["identifier",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":461,"title":{},"body":{"index.html":{}}}],["implements",{"_index":110,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/CatsModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["import",{"_index":23,"title":{},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["imports",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Cat.html":{},"controllers/CatController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Cat.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{}}}],["initialized",{"_index":430,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":86,"title":{"injectables/AuthMiddleware.html":{},"injectables/CatsService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggerMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"injectables/CatsService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["injectables",{"_index":88,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CatsService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"overview.html":{}}}],["inspect=0.0.0.0:5858",{"_index":464,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":455,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":216,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["intercept(context",{"_index":217,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["interface",{"_index":121,"title":{"interfaces/Cat.html":{},"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/Cat.html":{},"interfaces/SwaggerConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":123,"title":{},"body":{"interfaces/Cat.html":{},"interfaces/SwaggerConfig.html":{},"overview.html":{}}}],["isarray",{"_index":25,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["isint",{"_index":26,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["isoptional",{"_index":27,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["isstring",{"_index":28,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["isuuid",{"_index":29,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["js",{"_index":491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwks",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["license",{"_index":486,"title":{},"body":{"properties.html":{}}}],["line:max",{"_index":40,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["listall",{"_index":129,"title":{},"body":{"controllers/CatController.html":{}}}],["logger",{"_index":148,"title":{},"body":{"controllers/CatController.html":{},"index.html":{}}}],["loggermiddleware",{"_index":256,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["mapped",{"_index":439,"title":{},"body":{"index.html":{}}}],["matching",{"_index":52,"title":{},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Cat.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":116,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ErrorsInterceptor.html":{}}}],["metadata",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":194,"title":{},"body":{"modules/CatsModule.html":{}}}],["methods",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["middlewareconsumer",{"_index":182,"title":{},"body":{"modules/CatsModule.html":{}}}],["midldeare",{"_index":388,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":346,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":117,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["mit",{"_index":487,"title":{},"body":{"properties.html":{}}}],["mode",{"_index":470,"title":{},"body":{"index.html":{}}}],["module",{"_index":72,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"index.html":{}}}],["modules",{"_index":74,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["mysql",{"_index":320,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["mysql2",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["mysql_db=test",{"_index":404,"title":{},"body":{"index.html":{}}}],["mysql_db_host=db",{"_index":405,"title":{},"body":{"index.html":{}}}],["mysql_db_port=3306",{"_index":406,"title":{},"body":{"index.html":{}}}],["mysql_password=root",{"_index":403,"title":{},"body":{"index.html":{}}}],["mysql_user=root",{"_index":402,"title":{},"body":{"index.html":{}}}],["name",{"_index":43,"title":{},"body":{"classes/Address.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Cat.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":431,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["nestapplication",{"_index":449,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":222,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["nestjs",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nestjs/common",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["nestjs/common/exceptions/http.exception",{"_index":108,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestjs/core",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":33,"title":{},"body":{"classes/Address.html":{},"controllers/CatController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["nestjs/websockets",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["nestjsx/crud",{"_index":303,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestmiddleware",{"_index":106,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":186,"title":{},"body":{"modules/CatsModule.html":{}}}],["new",{"_index":115,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["next",{"_index":39,"title":{},"body":{"classes/Address.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"injectables/LoggerMiddleware.html":{}}}],["nextfunction",{"_index":98,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["ngrx",{"_index":377,"title":{},"body":{"index.html":{}}}],["node",{"_index":417,"title":{},"body":{"index.html":{}}}],["node/register",{"_index":466,"title":{},"body":{"index.html":{}}}],["node_1",{"_index":428,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["npm",{"_index":454,"title":{},"body":{"index.html":{}}}],["number",{"_index":21,"title":{},"body":{"classes/Address.html":{},"interfaces/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["observable",{"_index":221,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["ok",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatController.html":{}}}],["ok'})@apibadrequestresponse({description",{"_index":134,"title":{},"body":{"controllers/CatController.html":{}}}],["openapi",{"_index":352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["openapiobject",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":101,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["overview",{"_index":482,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":292,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":149,"title":{},"body":{"controllers/CatController.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["patch",{"_index":447,"title":{},"body":{"index.html":{}}}],["path",{"_index":254,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["per",{"_index":41,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["pipe",{"_index":228,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["pipes",{"_index":389,"title":{},"body":{"index.html":{}}}],["pm",{"_index":435,"title":{},"body":{"index.html":{}}}],["poc",{"_index":372,"title":{},"body":{"index.html":{}}}],["port",{"_index":452,"title":{},"body":{"index.html":{}}}],["port=3000",{"_index":401,"title":{},"body":{"index.html":{}}}],["post",{"_index":150,"title":{},"body":{"controllers/CatController.html":{},"index.html":{}}}],["prefix",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatController.html":{}}}],["private",{"_index":197,"title":{},"body":{"injectables/CatsService.html":{}}}],["project",{"_index":362,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/Address.html":{},"interfaces/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"interfaces/SwaggerConfig.html":{},"properties.html":{}}}],["providers",{"_index":179,"title":{},"body":{"modules/CatsModule.html":{}}}],["public",{"_index":48,"title":{},"body":{"classes/Address.html":{},"injectables/AuthMiddleware.html":{},"modules/CatsModule.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["put",{"_index":151,"title":{},"body":{"controllers/CatController.html":{}}}],["r",{"_index":465,"title":{},"body":{"index.html":{}}}],["rc.0",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":9,"title":{},"body":{"classes/Address.html":{},"controllers/CatController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["redis",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["reflect",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["req",{"_index":102,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["req.headers",{"_index":113,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["request",{"_index":95,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{},"classes/HttpExceptionFilter.html":{}}}],["request'})@apiinternalservererrorresponse({description",{"_index":136,"title":{},"body":{"controllers/CatController.html":{}}}],["request.url",{"_index":255,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["requestmethod",{"_index":187,"title":{},"body":{"modules/CatsModule.html":{}}}],["requestmethod.all",{"_index":195,"title":{},"body":{"modules/CatsModule.html":{}}}],["required",{"_index":17,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["res",{"_index":258,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["response",{"_index":97,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/HttpExceptionFilter.html":{}}}],["response.status(statuscode).json",{"_index":251,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["rest",{"_index":366,"title":{},"body":{"index.html":{}}}],["results",{"_index":51,"title":{},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Cat.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatController.html":{},"injectables/CatsService.html":{},"injectables/ErrorsInterceptor.html":{}}}],["returns",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":398,"title":{},"body":{"index.html":{}}}],["route",{"_index":440,"title":{},"body":{"index.html":{}}}],["routerexplorer",{"_index":438,"title":{},"body":{"index.html":{}}}],["routesresolver",{"_index":436,"title":{},"body":{"index.html":{}}}],["rsa",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":410,"title":{},"body":{"index.html":{}}}],["running",{"_index":425,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":224,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":226,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["server",{"_index":451,"title":{},"body":{"index.html":{}}}],["services",{"_index":390,"title":{},"body":{"index.html":{}}}],["simplify",{"_index":364,"title":{},"body":{"index.html":{}}}],["socket",{"_index":429,"title":{},"body":{"index.html":{}}}],["socket.io",{"_index":298,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["sockets",{"_index":376,"title":{},"body":{"index.html":{}}}],["sonarts",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Cat.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{}}}],["specifies",{"_index":264,"title":{},"body":{"interfaces/SwaggerConfig.html":{}}}],["src",{"_index":458,"title":{},"body":{"index.html":{}}}],["src/**/*.spec.ts",{"_index":462,"title":{},"body":{"index.html":{}}}],["src/.../swagger.config.ts",{"_index":490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/auth.middleware.ts",{"_index":89,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/app/common/auth.middleware.ts:10",{"_index":99,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/app/common/auth.middleware.ts:6",{"_index":93,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/app/common/exception.filter.ts",{"_index":236,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/app/common/exception.filter.ts:10",{"_index":242,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/app/common/exception.interceptor.ts",{"_index":215,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["src/app/common/exception.interceptor.ts:14",{"_index":219,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["src/app/common/logger.middleware.ts",{"_index":257,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/app/common/logger.middleware.ts:6",{"_index":259,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/app/controllers/app.controller.ts",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/controllers/app.controller.ts:14",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/controllers/app.controller.ts:7",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/domain/cat.controller.ts",{"_index":126,"title":{},"body":{"controllers/CatController.html":{},"coverage.html":{}}}],["src/app/domain/cat.controller.ts:46",{"_index":140,"title":{},"body":{"controllers/CatController.html":{}}}],["src/app/domain/cat.controller.ts:59",{"_index":144,"title":{},"body":{"controllers/CatController.html":{}}}],["src/app/domain/cat.dto.ts",{"_index":6,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"coverage.html":{}}}],["src/app/domain/cat.dto.ts:13",{"_index":22,"title":{},"body":{"classes/Address.html":{}}}],["src/app/domain/cat.dto.ts:20",{"_index":213,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/app/domain/cat.dto.ts:24",{"_index":211,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/app/domain/cat.dto.ts:28",{"_index":212,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/app/domain/cat.dto.ts:36",{"_index":209,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/app/domain/cat.dto.ts:44",{"_index":234,"title":{},"body":{"classes/GetCatByIdParam.html":{}}}],["src/app/domain/cat.dto.ts:9",{"_index":20,"title":{},"body":{"classes/Address.html":{}}}],["src/app/domain/cat.interface.ts",{"_index":124,"title":{},"body":{"interfaces/Cat.html":{},"coverage.html":{}}}],["src/app/domain/cat.module.ts",{"_index":178,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/app/domain/cat.module.ts:11",{"_index":183,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/app/domain/cat.service.ts",{"_index":196,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/app/domain/cat.service.ts:12",{"_index":201,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/app/domain/cat.service.ts:6",{"_index":204,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/app/domain/cat.service.ts:8",{"_index":200,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/main.ts",{"_index":467,"title":{},"body":{"index.html":{}}}],["src/swagger/swagger.config.ts",{"_index":281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/swagger.interface.ts",{"_index":263,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{}}}],["src/swagger/swagger.ts",{"_index":288,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standardize",{"_index":365,"title":{},"body":{"index.html":{}}}],["start",{"_index":471,"title":{},"body":{"index.html":{}}}],["started",{"_index":360,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":11,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["statements",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["statuscode",{"_index":249,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["string",{"_index":14,"title":{},"body":{"classes/Address.html":{},"controllers/AppController.html":{},"interfaces/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"interfaces/SwaggerConfig.html":{}}}],["successfully",{"_index":139,"title":{},"body":{"controllers/CatController.html":{},"index.html":{}}}],["suit",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":479,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":480,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":266,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["swagger_config",{"_index":283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":262,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":269,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":472,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":477,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":476,"title":{},"body":{"index.html":{}}}],["tests",{"_index":474,"title":{},"body":{"index.html":{}}}],["this.cats",{"_index":207,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.push(cat",{"_index":206,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catservice.create(cat",{"_index":174,"title":{},"body":{"controllers/CatController.html":{}}}],["this.catservice.findall",{"_index":175,"title":{},"body":{"controllers/CatController.html":{}}}],["this.service.validate(authorization",{"_index":120,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["throw",{"_index":114,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["throwerror",{"_index":223,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["throwerror(new",{"_index":230,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["timestamp",{"_index":252,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["title",{"_index":270,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["training",{"_index":385,"title":{},"body":{"index.html":{}}}],["transform",{"_index":166,"title":{},"body":{"controllers/CatController.html":{}}}],["transformer",{"_index":35,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"dependencies.html":{}}}],["true",{"_index":37,"title":{},"body":{"classes/Address.html":{},"controllers/CatController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["true})@isint",{"_index":210,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["true})@isstring",{"_index":18,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{}}}],["true})@isuuid",{"_index":233,"title":{},"body":{"classes/GetCatByIdParam.html":{}}}],["ts",{"_index":460,"title":{},"body":{"index.html":{}}}],["tslint",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":38,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/Address.html":{},"injectables/AuthMiddleware.html":{},"interfaces/Cat.html":{},"controllers/CatController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GetCatByIdParam.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":340,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ui",{"_index":267,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["undefined})@isoptional()@isarray()@arrayminsize(1)@validatenested()@validatetype(undefined",{"_index":208,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["unit",{"_index":473,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":141,"title":{},"body":{"controllers/CatController.html":{}}}],["up",{"_index":415,"title":{},"body":{"index.html":{}}}],["use",{"_index":91,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":94,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["used",{"_index":387,"title":{},"body":{"index.html":{}}}],["usefilters",{"_index":152,"title":{},"body":{"controllers/CatController.html":{}}}],["usepipes",{"_index":153,"title":{},"body":{"controllers/CatController.html":{}}}],["usepipes(validationpipe",{"_index":171,"title":{},"body":{"controllers/CatController.html":{}}}],["uses",{"_index":363,"title":{},"body":{"index.html":{}}}],["using",{"_index":375,"title":{},"body":{"index.html":{}}}],["v6",{"_index":370,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":30,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["validatetype",{"_index":34,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{}}}],["validationpipe",{"_index":154,"title":{},"body":{"controllers/CatController.html":{}}}],["validator",{"_index":31,"title":{},"body":{"classes/Address.html":{},"classes/CreateCatDto.html":{},"classes/GetCatByIdParam.html":{},"dependencies.html":{}}}],["value",{"_index":203,"title":{},"body":{"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":489,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":397,"title":{},"body":{"index.html":{}}}],["version",{"_index":271,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["void",{"_index":185,"title":{},"body":{"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["volumes",{"_index":418,"title":{},"body":{"index.html":{}}}],["watch",{"_index":457,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":379,"title":{},"body":{"index.html":{}}}],["whitelist",{"_index":165,"title":{},"body":{"controllers/CatController.html":{}}}],["winston",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["yamljs",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/cat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/domain/cat.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/domain/cat.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsArray, IsInt, IsOptional, IsString, IsUUID, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type as ValidateType } from 'class-transformer';\n\n\nexport class Address {\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly city: string;\n\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly state: number; \n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class CreateCatDto {\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly name: string;\n\n  @ApiProperty({description:\"\", required: true})\n  @IsInt()\n  readonly age: number;\n\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly breed: string;\n\n  @ApiProperty({description:\"address\", required: true, type: [Address]})\n  @IsOptional()\n  @IsArray()\n  @ArrayMinSize(1)\n  @ValidateNested()\n  @ValidateType(() => Address)\n  public address?: Address [];\n}\n\n\n// tslint:disable-next-line:max-classes-per-file\nexport class GetCatByIdParam {\n  @ApiProperty({description:\"\", required: true})\n  @IsUUID()\n  readonly id!: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/controllers/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /api\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHealthCheck\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHealthCheck\n                        \n                    \n                \n            \n            \n                \ngetHealthCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/health')\n                \n            \n\n            \n                \n                    Defined in src/app/controllers/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { status: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/testAuth0')\n                \n            \n\n            \n                \n                    Defined in src/app/controllers/app.controller.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { status: string; }\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller('/api')\nexport class AppController {\n\n  @Get('/testAuth0')\n  getHello() {\n    return {\n      status: 'ok'\n    };\n  }\n\n  @Get('/health')\n  getHealthCheck() {\n    return {\n      status: 'ok'\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app/controllers/app.controller';\nimport { CatsModule } from './app/domain/cat.module';\n\n@Module({\n  imports: [\n    CatsModule\n  ],\n  controllers: [AppController]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/common/auth.middleware.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, _: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/auth.middleware.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { createParamDecorator, ExecutionContext, HttpStatus, Injectable, NestMiddleware } from '@nestjs/common';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { NextFunction, Request, Response } from 'express';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n\n  constructor() {}\n\n  public async use(req: Request, _: Response, next: NextFunction) {\n    const { authorization } = req.headers;\n    if (!authorization) {\n      throw new HttpException({ message: 'Missing authorization Header' }, HttpStatus.BAD_REQUEST);\n    }\n    // this.service.validate(authorization);\n    next();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cat.html":{"url":"interfaces/Cat.html","title":"interface - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/cat.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            breed\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        breed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Cat {\n  name: string;\n  age: number;\n  breed: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatController.html":{"url":"controllers/CatController.html","title":"controller - CatController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/cat.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCat\n                            \n                            \n                                    Async\n                                listAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCat\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCat(cat: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('cat')@Post('')@ApiOperation({description: 'create new Cat'})@UsePipes(ValidationPipe)@HttpCode(HttpStatus.OK)@ApiOkResponse({description: 'OK'})@ApiBadRequestResponse({description: 'Bad Request'})@ApiInternalServerErrorResponse({description: 'data has been created successfully'})\n                \n            \n\n            \n                \n                    Defined in src/app/domain/cat.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    listAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('cat')@Get('')@ApiOperation({description: 'Get All Cat'})@UsePipes(ValidationPipe)@HttpCode(HttpStatus.OK)@ApiOkResponse({description: 'OK'})@ApiBadRequestResponse({description: 'Bad Request'})@ApiInternalServerErrorResponse({description: 'data has been fetched successfully'})\n                \n            \n\n            \n                \n                    Defined in src/app/domain/cat.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Logger,\n  Param,\n  Post,\n  Put,\n  UseFilters,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiInternalServerErrorResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateCatDto, GetCatByIdParam } from './cat.dto';\nimport { CatsService } from './cat.service';\n\n@Controller('cats')\n@UsePipes(\n  new ValidationPipe({\n    whitelist: true,\n    transform: true,\n  }),\n)\nexport class CatController {\n  constructor(private readonly catService: CatsService){}\n\n  @ApiTags('cat')\n  @Post('')\n  @ApiOperation({\n     description: 'create new Cat' })\n  @UsePipes(ValidationPipe)\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ description: 'OK' })\n  @ApiBadRequestResponse({ description: 'Bad Request' })\n  @ApiInternalServerErrorResponse({ description: 'data has been created successfully' })\n  async createCat(@Body() cat: CreateCatDto) {\n    return this.catService.create(cat);\n  }\n\n  @ApiTags('cat')\n  @Get('')\n  @ApiOperation({\n     description: 'Get All Cat' })\n  @UsePipes(ValidationPipe)\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ description: 'OK' })\n  @ApiBadRequestResponse({ description: 'Bad Request' })\n  @ApiInternalServerErrorResponse({ description: 'data has been fetched successfully' })\n  async listAll() {\n    return this.catService.findAll();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/domain/cat.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/cat.module.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, NestModule, MiddlewareConsumer, RequestMethod } from '@nestjs/common';\nimport { AuthMiddleware } from '../common/auth.middleware';\nimport { CatController } from './cat.controller';\nimport { CatsService } from './cat.service';\n\n@Module({\n  controllers: [CatController],\n  providers: [CatsService],\n})\nexport class CatsModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer.apply(AuthMiddleware)\n      .exclude('/api/v1/cat/something')\n      .forRoutes({path: '/api/v1', method : RequestMethod.ALL});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/cat.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(cat: Cat)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/cat.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                Cat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/cat.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Cat[]\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cat[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/cat.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cat } from './cat.interface';\n\n@Injectable()\nexport class CatsService {\n  private readonly cats: Cat[] = [];\n\n  create(cat: Cat) {\n    this.cats.push(cat);\n  }\n\n  findAll(): Cat[] {\n    return this.cats;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/cat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                address\n                            \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'address', required: true, type: undefined})@IsOptional()@IsArray()@ArrayMinSize(1)@ValidateNested()@ValidateType(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/domain/cat.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '', required: true})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/domain/cat.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/domain/cat.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/domain/cat.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsArray, IsInt, IsOptional, IsString, IsUUID, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type as ValidateType } from 'class-transformer';\n\n\nexport class Address {\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly city: string;\n\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly state: number; \n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class CreateCatDto {\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly name: string;\n\n  @ApiProperty({description:\"\", required: true})\n  @IsInt()\n  readonly age: number;\n\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly breed: string;\n\n  @ApiProperty({description:\"address\", required: true, type: [Address]})\n  @IsOptional()\n  @IsArray()\n  @ArrayMinSize(1)\n  @ValidateNested()\n  @ValidateType(() => Address)\n  public address?: Address [];\n}\n\n\n// tslint:disable-next-line:max-classes-per-file\nexport class GetCatByIdParam {\n  @ApiProperty({description:\"\", required: true})\n  @IsUUID()\n  readonly id!: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsInterceptor.html":{"url":"injectables/ErrorsInterceptor.html","title":"injectable - ErrorsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/exception.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/exception.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorsInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next\n      .handle()\n      .pipe(\n        catchError(err =>\n          throwError(new HttpException('New message', HttpStatus.BAD_GATEWAY)),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCatByIdParam.html":{"url":"classes/GetCatByIdParam.html","title":"class - GetCatByIdParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCatByIdParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/cat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '', required: true})@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/domain/cat.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsArray, IsInt, IsOptional, IsString, IsUUID, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type as ValidateType } from 'class-transformer';\n\n\nexport class Address {\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly city: string;\n\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly state: number; \n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class CreateCatDto {\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly name: string;\n\n  @ApiProperty({description:\"\", required: true})\n  @IsInt()\n  readonly age: number;\n\n  @ApiProperty({description:\"\", required: true})\n  @IsString()\n  readonly breed: string;\n\n  @ApiProperty({description:\"address\", required: true, type: [Address]})\n  @IsOptional()\n  @IsArray()\n  @ArrayMinSize(1)\n  @ValidateNested()\n  @ValidateType(() => Address)\n  public address?: Address [];\n}\n\n\n// tslint:disable-next-line:max-classes-per-file\nexport class GetCatByIdParam {\n  @ApiProperty({description:\"\", required: true})\n  @IsUUID()\n  readonly id!: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/exception.filter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n} from '@nestjs/common';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const statusCode = exception.getStatus();\n\n    response.status(statusCode).json({\n      statusCode,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/logger.middleware.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n    console.log(`Request...`);\n    next();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwaggerConfig.html":{"url":"interfaces/SwaggerConfig.html","title":"interface - SwaggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwaggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/swagger/swagger.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Specifies configuration for the swagger UI (found at /api).\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            tags\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SwaggerConfig {\n  title: string;\n  description: string;\n  version: string;\n  tags: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/common/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/common/exception.interceptor.ts\n            \n            injectable\n            ErrorsInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/common/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/controllers/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/cat.controller.ts\n            \n            controller\n            CatController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/cat.dto.ts\n            \n            class\n            Address\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/domain/cat.dto.ts\n            \n            class\n            GetCatByIdParam\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/domain/cat.interface.ts\n            \n            interface\n            Cat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/cat.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/swagger/swagger.config.ts\n            \n            variable\n            SWAGGER_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/swagger/swagger.interface.ts\n            \n            interface\n            SwaggerConfig\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/swagger/swagger.ts\n            \n            function\n            createDocument\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/platform-socket.io : ^6.3.1\n        \n            @nestjs/swagger : ^4.5.5\n        \n            @nestjs/typeorm : ^7.0.0\n        \n            @nestjs/websockets : ^6.3.1\n        \n            @nestjsx/crud : ^3.2.0\n        \n            bcrypt : ^4.0.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.0-rc.0\n        \n            express : ^4.17.1\n        \n            express-jwt : ^5.3.3\n        \n            jwks-rsa : ^1.7.0\n        \n            moment : ^2.25.3\n        \n            mysql : ^2.18.1\n        \n            mysql2 : ^2.1.0\n        \n            nodemailer : ^6.4.6\n        \n            passport : ^0.4.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.5.4\n        \n            socket.io-redis : ^5.2.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tslint-sonarts : ^1.9.0\n        \n            typeorm : ^0.2.22\n        \n            winston : ^3.2.1\n        \n            yamljs : ^0.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createDocument   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDocument\n                        \n                    \n                \n            \n            \n                \ncreateDocument(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n                    Creates an OpenAPI document for an application, via swagger.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the nestjs application\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OpenAPIObject\n\n                    \n                    \n                        the OpenAPI document\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\nNestJS Contacts API\nThis project uses @nestjsx/crud to simplify and standardize the REST API\nThis backend is based on NestJS Framework V6 (https://nestjs.com/), This is API Backend for POC on event driven UI using Sockets and NgRx\n\nDB: Mysql\nNestjs\nTypeORM\nWebsockets: Socket.io\n\nFrontend is available here: https://github.com/tkssharma/ng-dashboard-training\n@nestjs features used in this application\n\nMidldeare \npipes\ncontrollers\nservices\ndynamic modules \nguards\nconfigModule\nDatabase Module\nEntity Module\nLogger Module\nSwagger Module\n\nEnv VARS: (create a .env file in root)\nENV=development\nDB_TYPE=mysql\nPORT=3000\nMYSQL_USER=root\nMYSQL_PASSWORD=root\nMYSQL_DB=test\nMYSQL_DB_HOST=db\nMYSQL_DB_PORT=3306\nDB_DIALECT=mysql\nDB_CHARSET=utf8mb4\nDB_COLLATE=utf8mb4_unicode_ci\nRun\ncp env.example .envdocker-compose up --build services:\n  node:\n    build: .\n    volumes:\n      - ./docker/node/node-docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh\n      - .:/app\n    env_file:\n      ./.envServer will be running on http://localhost:3000\nEndpoints\nnode_1   | socket initialized\nnode_1   | [Nest] 48   - 04/06/2020, 1:39 PM   [RoutesResolver] AppController {/}: +726ms\nnode_1   | [Nest] 48   - 04/06/2020, 1:39 PM   [RouterExplorer] Mapped {/, GET} route +6ms\nnode_1   | [Nest] 48   - 04/06/2020, 1:39 PM   [RoutesResolver] ContactsController {/contacts}: +3ms\nnode_1   | [Nest] 48   - 04/06/2020, 1:39 PM   [RouterExplorer] Mapped {/, GET} route +4ms\nnode_1   | [Nest] 48   - 04/06/2020, 1:39 PM   [RouterExplorer] Mapped {/:id, GET} route +3ms\nnode_1   | [Nest] 48   - 04/06/2020, 1:39 PM   [RouterExplorer] Mapped {/, POST} route +4ms\nnode_1   | [Nest] 48   - 04/06/2020, 1:39 PM   [RouterExplorer] Mapped {/bulk, POST} route +5ms\nnode_1   | [Nest] 48   - 04/06/2020, 1:39 PM   [RouterExplorer] Mapped {/:id, PATCH} route +4ms\nnode_1   | [Nest] 48   - 04/06/2020, 1:39 PM   [RouterExplorer] Mapped {/:id, DELETE} route +2ms\nnode_1   | [Nest] 48   - 04/06/2020, 1:39 PM   [NestApplication] Nest application successfully started +7ms\nnode_1   | SERVER IS RUNNING ON PORT 3000Installation\n$ npm installRunning the app with debugger\n{\n  \"watch\": [\"src\"],\n  \"ext\": \"ts\",\n  \"ignore\": [\"src/**/*.spec.ts\"],\n  \"exec\": \"node --inspect=0.0.0.0:5858 -r ts-node/register ./src/main.ts\"\n}\n# development\n$ npm run build\n$ npm run debug\n$ docker-compose up\n\n# watch mode\n$ npm run start\nTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.0\n        \n            Description : \n        \n            License : MIT\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SWAGGER_CONFIG   (src/.../swagger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/swagger/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SWAGGER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SwaggerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Nest js Template',\n  description: 'Template',\n  version: '1.0',\n  tags: ['Template'],\n}\n                    \n                \n\n            \n                \n                    Configuration for the swagger UI (found at /api).\nChange this to suit your app!\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
